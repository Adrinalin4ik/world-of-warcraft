{"version":3,"file":"index.js","names":["r","_interopRequireWildcard","require","_chunked","_interopRequireDefault","_chunk","_modf","_mwmo","_skipChunk","_types","_mcal","_mh2o","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MHDR","Chunk","flags","uint32le","offsetMCIN","offsetMTEX","offsetMMDX","offsetMMID","offsetMWMO","offsetMWID","offsetMDDF","offsetMODF","offsetMFBO","offsetMH2O","offsetMTXF","skip","Reserved","MTEX","filenames","Array","String","MMDX","MDDF","entries","Struct","index","id","position","Vec3Float","rotation","scale","uint16le","filename","parent","MCVT","heights","floatle","MCNR","normals","x","int8","z","y","uint8","MCLY","layers","textureID","offsetMCAL","effectID","int16le","compressed","MCRF","MDDFs","doodadCount","MODFs","wmoCount","doodadEntries","map","wmoEntries","MODF","MCSH","actualSize","sizeMCSH","MCLQ","sizeMCLQ","MCNK","indexX","indexY","layerCount","offsetMCVT","offsetMCNR","offsetMCLY","offsetMCRF","sizeMCAL","offsetMCSH","areaID","holes","unknown","textureMaps","predTex","noEffectDoodad","offsetMCSE","soundEmitterCount","offsetMCLQ","offsetMCCV","MCCV","Optional","SkipChunk","MCAL","MCSE","ADT","wdtFlags","Chunked","MCIN","MMID","MWMO","MWID","MH2O","MCNKs","MFBO","MTXF","MTXP","offsetMTXP","decode","stream","_default","exports"],"sources":["../../src/lib/adt/index.js"],"sourcesContent":["import * as r from 'restructure';\n\nimport Chunked from '../chunked';\nimport Chunk from '../chunked/chunk';\nimport MODF from '../chunked/modf';\nimport MWMO from '../chunked/mwmo';\nimport SkipChunk from '../chunked/skip-chunk';\nimport { Vec3Float } from '../types';\nimport MCAL from './mcal';\nimport MH2O from './mh2o';\n\nconst MHDR = Chunk({\n  flags: r.uint32le,\n\n  offsetMCIN: r.uint32le,\n  offsetMTEX: r.uint32le,\n  offsetMMDX: r.uint32le,\n  offsetMMID: r.uint32le,\n  offsetMWMO: r.uint32le,\n  offsetMWID: r.uint32le,\n  offsetMDDF: r.uint32le,\n  offsetMODF: r.uint32le,\n  offsetMFBO: r.uint32le,\n  offsetMH2O: r.uint32le,\n  offsetMTXF: r.uint32le,\n\n  skip: new r.Reserved(r.uint32le, 4)\n});\n\nconst MTEX = Chunk({\n  filenames: new r.Array(new r.String(null), 'size', 'bytes')\n});\n\nconst MMDX = Chunk({\n  filenames: new r.Array(new r.String(null), 'size', 'bytes')\n});\n\nconst MDDF = Chunk({\n  entries: new r.Array(new r.Struct({\n    index: r.uint32le,\n    id: r.uint32le,\n    position: Vec3Float,\n    rotation: Vec3Float,\n    scale: r.uint16le,\n    flags: r.uint16le,\n\n    filename: function() {\n      return this.parent.parent.MMDX.filenames[this.index];\n    }\n  }), 'size', 'bytes')\n});\n\nconst MCVT = Chunk({\n  heights: new r.Array(r.floatle, 145)\n});\n\nconst MCNR = Chunk({\n  normals: new r.Array(new r.Struct({\n    x: r.int8,\n    z: r.int8,\n    y: r.int8\n  }), 145),\n  skip: new r.Reserved(r.uint8, 13)\n});\n\nconst MCLY = Chunk({\n  layers: new r.Array(new r.Struct({\n    textureID: r.uint32le,\n    flags: r.uint32le,\n    offsetMCAL: r.uint32le,\n    effectID: r.int16le,\n    skip: r.int16le,\n\n    compressed: function() {\n      return this.flags & 0x200;\n    }\n  }), 'size', 'bytes')\n});\n\nconst MCRF = Chunk({\n  MDDFs: new r.Array(r.uint32le, function() {\n    return this.parent.doodadCount;\n  }),\n\n  MODFs: new r.Array(r.uint32le, function() {\n    return this.parent.wmoCount;\n  }),\n\n  doodadEntries: function() {\n    const entries = this.parent.parent.MDDF.entries;\n    return this.MDDFs.map((id) => entries[id]);\n  },\n\n  wmoEntries: function() {\n    const entries = this.parent.parent.MODF.entries;\n    return this.MODFs.map((id) => entries[id]);\n  }\n});\n\nconst MCSH = Chunk({\n  // Incorrect size reported by MCSH in some ADTs\n  actualSize: function() {\n    return this.parent.sizeMCSH;\n  },\n  skip: new r.Reserved(r.uint8, 'actualSize')\n});\n\nconst MCLQ = Chunk({\n  // Incorrect size reported by MCLQ in some ADTs\n  actualSize: function() {\n    return this.parent.sizeMCLQ - 8;\n  },\n  skip: new r.Reserved(r.uint8, 'actualSize')\n});\n\nconst MCNK = Chunk({\n  flags: r.uint32le,\n  indexX: r.uint32le,\n  indexY: r.uint32le,\n  layerCount: r.uint32le,\n  doodadCount: r.uint32le,\n  offsetMCVT: r.uint32le,\n  offsetMCNR: r.uint32le,\n  offsetMCLY: r.uint32le,\n  offsetMCRF: r.uint32le,\n  offsetMCAL: r.uint32le,\n  sizeMCAL: r.uint32le,\n  offsetMCSH: r.uint32le,\n  sizeMCSH: r.uint32le,\n  areaID: r.uint32le,\n  wmoCount: r.uint32le,\n  holes: r.uint16le,\n  unknown: r.uint16le,\n\n  textureMaps: new r.Reserved(r.uint16le, 8),\n\n  predTex: r.uint32le,\n  noEffectDoodad: r.uint32le,\n  offsetMCSE: r.uint32le,\n  soundEmitterCount: r.uint32le,\n  offsetMCLQ: r.uint32le,\n  sizeMCLQ: r.uint32le,\n  position: Vec3Float,\n  offsetMCCV: r.uint32le,\n\n  skip: new r.Reserved(r.uint32le, 2),\n\n  MCVT: MCVT,\n  MCCV: new r.Optional(SkipChunk, function() {\n    return this.offsetMCCV;\n  }),\n  MCNR: MCNR,\n  MCLY: MCLY,\n  MCRF: MCRF,\n  MCSH: new r.Optional(MCSH, function() {\n    return this.flags & 0x01;\n  }),\n  MCAL: MCAL,\n  MCLQ: new r.Optional(MCLQ, function() {\n    return this.offsetMCLQ;\n  }),\n  MCSE: new r.Optional(SkipChunk, function() {\n    return this.offsetMCSE;\n  })\n});\n\nconst ADT = function(wdtFlags) {\n  return Chunked({\n    MHDR: MHDR,\n\n    flags: function() {\n      return this.MHDR.flags;\n    },\n\n    wdtFlags: function() {\n      return wdtFlags;\n    },\n\n    MCIN: SkipChunk,\n    MTEX: MTEX,\n    MMDX: MMDX,\n    MMID: SkipChunk,\n    MWMO: MWMO,\n    MWID: SkipChunk,\n    MDDF: new r.Optional(MDDF, function() {\n      return this.MHDR.offsetMDDF;\n    }),\n    MODF: new r.Optional(MODF, function() {\n      return this.MHDR.offsetMODF;\n    }),\n    MH2O: new r.Optional(MH2O, function() {\n      return this.MHDR.offsetMH2O;\n    }),\n    MCNKs: new r.Array(MCNK, 256),\n    MFBO: new r.Optional(SkipChunk, function() {\n      return this.MHDR.offsetMFBO;\n    }),\n    MTXF: new r.Optional(SkipChunk, function() {\n      return this.MHDR.offsetMTXF;\n    }),\n    MTXP: new r.Optional(SkipChunk, function() {\n      return this.MHDR.offsetMTXP;\n    })\n  });\n};\n\nADT.decode = function(stream) {\n  return ADT().decode(stream);\n};\n\nexport default ADT;\n"],"mappings":"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"}