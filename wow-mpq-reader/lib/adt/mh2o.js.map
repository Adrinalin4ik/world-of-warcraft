{"version":3,"file":"mh2o.js","names":["r","_interopRequireWildcard","require","_chunk","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","VertexData","Struct","vertexCount","parent","heightMap","Optional","Array","floatle","liquidTypeID","heights","defaultHeight","maxHeightLevel","fill","alphas","uint8","LiquidLayer","uint16le","liquidObjectID","minHeightLevel","offsetX","offsetY","width","height","Pointer","uint32le","type","relativeTo","vertexData","LiquidFlags","fishable","deep","LiquidChunk","layers","lazy","layerCount","flags","MH2O","chunk","Chunk","chunks","value","decode","stream","data","pos","offset","size","_default","exports"],"sources":["../../src/lib/adt/mh2o.js"],"sourcesContent":["import * as r from 'restructure';\n\n import Chunk from '../chunked/chunk';\n\n const VertexData = new r.Struct({\n  vertexCount() {\n    return this.parent.vertexCount;\n  },\n\n   heightMap: new r.Optional(new r.Array(r.floatle, 'vertexCount'), function() {\n    // TODO: Might have to be determined via LiquidType.dbc or LiquidMaterial.dbc\n    return this.parent.liquidTypeID !== 2;\n  }),\n\n   heights: function() {\n    const defaultHeight = this.parent.maxHeightLevel;\n    return this.heightMap || new Array(this.vertexCount).fill(defaultHeight);\n  },\n\n   alphas: new r.Array(r.uint8, 'vertexCount')\n});\n\n const LiquidLayer = new r.Struct({\n  liquidTypeID: r.uint16le,\n  liquidObjectID: r.uint16le,\n\n   minHeightLevel: r.floatle,\n  maxHeightLevel: r.floatle,\n\n   offsetX: r.uint8,\n  offsetY: r.uint8,\n  width: r.uint8,\n  height: r.uint8,\n\n   vertexCount: function() {\n    return (this.width + 1) * (this.height + 1);\n  },\n\n   fill: new r.Pointer(r.uint32le, new r.Array(r.uint8, 'height'), {\n    type: 'global',\n    relativeTo: () => 'parent.parent.offset'\n  }),\n\n   vertexData: new r.Pointer(r.uint32le, VertexData, {\n    type: 'global',\n    relativeTo: () => 'parent.parent.offset'\n  })\n});\n\n const LiquidFlags = new r.Struct({\n  fishable: new r.Array(r.uint8, 8),\n  deep: new r.Array(r.uint8, 8)\n});\n\n const LiquidChunk = new r.Struct({\n  layers: new r.Pointer(r.uint32le, new r.Array(LiquidLayer, 'layerCount'), {\n    type: 'global',\n    lazy: true,\n    relativeTo: () => 'parent.offset'\n  }),\n  layerCount: r.uint32le,\n  flags: new r.Pointer(r.uint32le, LiquidFlags, {\n    type: 'global',\n    relativeTo: () => 'parent.offset'\n  })\n});\n\n class MH2O {\n\n   constructor() {\n    this.chunk = Chunk();\n    this.chunks = new r.Array(LiquidChunk, 256);\n  }\n\n   decode(stream, parent) {\n    const data = this.chunk.decode(stream, parent);\n    const pos = stream.pos;\n\n     // Used to correctly resolve pointers within MH2O chunk\n    parent.offset = pos;\n\n     data.chunks = this.chunks.decode(stream, parent);\n\n     stream.pos = pos + data.size;\n    return data;\n  }\n\n }\n\n export default new MH2O();"],"mappings":"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"}