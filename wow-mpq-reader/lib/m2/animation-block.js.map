{"version":3,"file":"animation-block.js","names":["r","_interopRequireWildcard","require","_nofs","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_default","type","Struct","interpolationType","uint16le","globalSequenceID","int16le","timestamps","Nofs","uint32le","values","trackCount","length","tracks","trackIndex","track","animationIndex","push","maxTrackLength","max","forEach","keyframeCount","i","len","firstKeyframe","timestamp","value","empty","animated"],"sources":["../../src/lib/m2/animation-block.js"],"sourcesContent":["import * as r from 'restructure';\n\nimport Nofs from './nofs';\n\nexport default function(type) {\n  return new r.Struct({\n    interpolationType: r.uint16le,\n    globalSequenceID: r.int16le,\n    timestamps: new Nofs(new Nofs(r.uint32le)),\n    values: new Nofs(new Nofs(type)),\n\n    trackCount: function() {\n      return this.values.length;\n    },\n\n    tracks: function() {\n      const tracks = [];\n\n      for (let trackIndex = 0; trackIndex < this.trackCount; trackIndex++) {\n        const track = {};\n\n        // Corresponds to offset in animations array of MD2.\n        track.animationIndex = trackIndex;\n        track.timestamps = this.timestamps[trackIndex] || [];\n        track.values = this.values[trackIndex] || [];\n\n        tracks.push(track);\n      }\n\n      return tracks;\n    },\n\n    maxTrackLength: function() {\n      let max = 0;\n\n      this.tracks.forEach((track) => {\n        if (track.timestamps.length > max) {\n          max = track.timestamps.length;\n        }\n      });\n\n      return max;\n    },\n\n    keyframeCount: function() {\n      let keyframeCount = 0;\n\n      for (let i = 0, len = this.tracks.length; i < len; ++i) {\n        keyframeCount += this.tracks[i].timestamps.length;\n      }\n\n      return keyframeCount;\n    },\n\n    firstKeyframe: function() {\n      if (this.tracks.length === 0) {\n        return null;\n      } else {\n        for (let i = 0, len = this.tracks.length; i < len; ++i) {\n          const track = this.tracks[i];\n\n          if (track.timestamps.length > 0) {\n            return {\n              timestamp: track.timestamps[0],\n              value: track.values[0]\n            };\n          }\n        }\n\n        return null;\n      }\n    },\n\n    empty: function() {\n      return this.maxTrackLength === 0;\n    },\n\n    animated: function() {\n      return !this.empty;\n    }\n  });\n}\n"],"mappings":"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"}