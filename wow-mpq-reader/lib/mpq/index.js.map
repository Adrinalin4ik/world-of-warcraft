{"version":3,"file":"index.js","names":["_refNapi","_interopRequireDefault","require","_files","_stormLib","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","_defineProperty","value","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","MPQ","path","flags","handle","files","Files","close","StormLib","SFileCloseArchive","patch","prefix","arguments","OPEN","READ_ONLY","Error","SFileOpenPatchArchive","SFileIsPatchedArchive","SFileGetLocale","locale","SFileSetLocale","open","callback","priority","handlePtr","ref","alloc","HANDLEPtr","SFileOpenArchive","deref","mpq","errno","GetLastError","concat","create","maxFileCount","SFileCreateArchive","WRITE_SHARE","USE_BITMAP","NO_LISTFILE","NO_ATTRIBUTES","NO_HEADER_SEARCH","FORCE_MPQ_V1","CHECK_SECTOR_CRC","LISTFILE","ATTRIBUTES","SIGNATURE","ARCHIVE_V1","ARCHIVE_V2","ARCHIVE_V3","ARCHIVE_V4","_default","exports"],"sources":["../../src/lib/mpq/index.js"],"sourcesContent":["import ref from 'ref-napi';\n\nimport Files from './files';\nimport { default as StormLib, HANDLEPtr } from './storm-lib';\n\nclass MPQ {\n\n  static OPEN = {\n    READ_ONLY:        0x00000100,\n    WRITE_SHARE:      0x00000200,\n    USE_BITMAP:       0x00000400,\n    NO_LISTFILE:      0x00010000,\n    NO_ATTRIBUTES:    0x00020000,\n    NO_HEADER_SEARCH: 0x00040000,\n    FORCE_MPQ_V1:     0x00080000,\n    CHECK_SECTOR_CRC: 0x00100000\n  };\n\n  static CREATE = {\n    LISTFILE:   0x00100000,\n    ATTRIBUTES: 0x00200000,\n    SIGNATURE:  0x00400000,\n    ARCHIVE_V1: 0x00000000,\n    ARCHIVE_V2: 0x01000000,\n    ARCHIVE_V3: 0x02000000,\n    ARCHIVE_V4: 0x03000000\n  };\n\n  constructor(path, flags, handle) {\n    this.path = path;\n    this.flags = flags;\n    this.handle = handle;\n    this.files = new Files(this);\n  }\n\n  close() {\n    const handle = this.handle;\n    if (handle) {\n      this.handle = null;\n      return StormLib.SFileCloseArchive(handle);\n    }\n  }\n\n  get opened() {\n    return !!this.handle;\n  }\n\n  patch(path, prefix = null) {\n    if (!(this.flags & this.constructor.OPEN.READ_ONLY)) {\n      throw new Error('archive must be read-only');\n    }\n\n    const flags = 0;\n    return StormLib.SFileOpenPatchArchive(this.handle, path, prefix, flags);\n  }\n\n  get patched() {\n    if (this.handle) {\n      return StormLib.SFileIsPatchedArchive(this.handle);\n    }\n  }\n\n  static get locale() {\n    return StormLib.SFileGetLocale();\n  }\n\n  static set locale(locale) {\n    StormLib.SFileSetLocale(locale);\n  }\n\n  static open(path, flags = 0, callback) {\n    if (typeof flags === 'function' && callback === undefined) {\n      return this.open(path, null, flags);\n    }\n\n    const priority = 0;\n    const handlePtr = ref.alloc(HANDLEPtr);\n    if (StormLib.SFileOpenArchive(path, priority, flags, handlePtr)) {\n      const handle = handlePtr.deref();\n      const mpq = new this(path, flags, handle);\n\n      if (callback !== undefined) {\n        callback(mpq);\n        // mpq.close();\n        return true;\n      }\n\n      return mpq;\n    }\n    const errno = StormLib.GetLastError();\n    throw new Error(`archive could not be found or opened (${errno})`);\n  }\n\n  static create(path, callback) {\n    const flags = 0;\n    const maxFileCount = 0;\n    const handlePtr = ref.alloc(HANDLEPtr);\n    if (StormLib.SFileCreateArchive(path, flags, maxFileCount, handlePtr)) {\n      return this.open(path, callback);\n    }\n    const errno = StormLib.GetLastError();\n    throw new Error(`archive could not be created (${errno})`);\n  }\n\n}\n\nexport default MPQ;\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAC,uBAAA,CAAAH,OAAA;AAA6D,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAF,wBAAAM,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAhB,uBAAAU,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,QAAAF,GAAA,sCAAAE,OAAA,wBAAAe,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAlB,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAiB,MAAA,IAAAjB,GAAA,CAAAmB,WAAA,KAAAF,MAAA,IAAAjB,GAAA,KAAAiB,MAAA,CAAAL,SAAA,qBAAAZ,GAAA,KAAAE,OAAA,CAAAF,GAAA;AAAA,SAAAoB,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAxB,MAAA,CAAAC,cAAA,CAAAgB,MAAA,EAAAQ,cAAA,CAAAJ,UAAA,CAAAlB,GAAA,GAAAkB,UAAA;AAAA,SAAAK,aAAAZ,WAAA,EAAAa,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAX,iBAAA,CAAAF,WAAA,CAAAV,SAAA,EAAAuB,UAAA,OAAAC,WAAA,EAAAZ,iBAAA,CAAAF,WAAA,EAAAc,WAAA,GAAA5B,MAAA,CAAAC,cAAA,CAAAa,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAe,gBAAArC,GAAA,EAAAW,GAAA,EAAA2B,KAAA,IAAA3B,GAAA,GAAAsB,cAAA,CAAAtB,GAAA,OAAAA,GAAA,IAAAX,GAAA,IAAAQ,MAAA,CAAAC,cAAA,CAAAT,GAAA,EAAAW,GAAA,IAAA2B,KAAA,EAAAA,KAAA,EAAAR,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAhC,GAAA,CAAAW,GAAA,IAAA2B,KAAA,WAAAtC,GAAA;AAAA,SAAAiC,eAAAM,GAAA,QAAA5B,GAAA,GAAA6B,YAAA,CAAAD,GAAA,oBAAArC,OAAA,CAAAS,GAAA,iBAAAA,GAAA,GAAA8B,MAAA,CAAA9B,GAAA;AAAA,SAAA6B,aAAAE,KAAA,EAAAC,IAAA,QAAAzC,OAAA,CAAAwC,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAzB,MAAA,CAAA4B,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAA9B,IAAA,CAAA4B,KAAA,EAAAC,IAAA,oBAAAzC,OAAA,CAAA6C,GAAA,uBAAAA,GAAA,YAAAxB,SAAA,4DAAAoB,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,IAEvDO,GAAG;EAuBP,SAAAA,IAAYC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAAAhC,eAAA,OAAA6B,GAAA;IAC/B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAG,IAAIC,iBAAK,CAAC,IAAI,CAAC;EAC9B;EAACpB,YAAA,CAAAe,GAAA;IAAAtC,GAAA;IAAA2B,KAAA,EAED,SAAAiB,MAAA,EAAQ;MACN,IAAMH,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAIA,MAAM,EAAE;QACV,IAAI,CAACA,MAAM,GAAG,IAAI;QAClB,OAAOI,oBAAQ,CAACC,iBAAiB,CAACL,MAAM,CAAC;MAC3C;IACF;EAAC;IAAAzC,GAAA;IAAAN,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,CAAC,CAAC,IAAI,CAAC+C,MAAM;IACtB;EAAC;IAAAzC,GAAA;IAAA2B,KAAA,EAED,SAAAoB,MAAMR,IAAI,EAAiB;MAAA,IAAfS,MAAM,GAAAC,SAAA,CAAAhC,MAAA,QAAAgC,SAAA,QAAAd,SAAA,GAAAc,SAAA,MAAG,IAAI;MACvB,IAAI,EAAE,IAAI,CAACT,KAAK,GAAG,IAAI,CAAChC,WAAW,CAAC0C,IAAI,CAACC,SAAS,CAAC,EAAE;QACnD,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,IAAMZ,KAAK,GAAG,CAAC;MACf,OAAOK,oBAAQ,CAACQ,qBAAqB,CAAC,IAAI,CAACZ,MAAM,EAAEF,IAAI,EAAES,MAAM,EAAER,KAAK,CAAC;IACzE;EAAC;IAAAxC,GAAA;IAAAN,GAAA,EAED,SAAAA,IAAA,EAAc;MACZ,IAAI,IAAI,CAAC+C,MAAM,EAAE;QACf,OAAOI,oBAAQ,CAACS,qBAAqB,CAAC,IAAI,CAACb,MAAM,CAAC;MACpD;IACF;EAAC;IAAAzC,GAAA;IAAAN,GAAA,EAED,SAAAA,IAAA,EAAoB;MAClB,OAAOmD,oBAAQ,CAACU,cAAc,EAAE;IAClC,CAAC;IAAAlD,GAAA,EAED,SAAAA,IAAkBmD,MAAM,EAAE;MACxBX,oBAAQ,CAACY,cAAc,CAACD,MAAM,CAAC;IACjC;EAAC;IAAAxD,GAAA;IAAA2B,KAAA,EAED,SAAA+B,KAAYnB,IAAI,EAAuB;MAAA,IAArBC,KAAK,GAAAS,SAAA,CAAAhC,MAAA,QAAAgC,SAAA,QAAAd,SAAA,GAAAc,SAAA,MAAG,CAAC;MAAA,IAAEU,QAAQ,GAAAV,SAAA,CAAAhC,MAAA,OAAAgC,SAAA,MAAAd,SAAA;MACnC,IAAI,OAAOK,KAAK,KAAK,UAAU,IAAImB,QAAQ,KAAKxB,SAAS,EAAE;QACzD,OAAO,IAAI,CAACuB,IAAI,CAACnB,IAAI,EAAE,IAAI,EAAEC,KAAK,CAAC;MACrC;MAEA,IAAMoB,QAAQ,GAAG,CAAC;MAClB,IAAMC,SAAS,GAAGC,mBAAG,CAACC,KAAK,CAACC,mBAAS,CAAC;MACtC,IAAInB,oBAAQ,CAACoB,gBAAgB,CAAC1B,IAAI,EAAEqB,QAAQ,EAAEpB,KAAK,EAAEqB,SAAS,CAAC,EAAE;QAC/D,IAAMpB,MAAM,GAAGoB,SAAS,CAACK,KAAK,EAAE;QAChC,IAAMC,GAAG,GAAG,IAAI,IAAI,CAAC5B,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAC;QAEzC,IAAIkB,QAAQ,KAAKxB,SAAS,EAAE;UAC1BwB,QAAQ,CAACQ,GAAG,CAAC;UACb;UACA,OAAO,IAAI;QACb;QAEA,OAAOA,GAAG;MACZ;MACA,IAAMC,KAAK,GAAGvB,oBAAQ,CAACwB,YAAY,EAAE;MACrC,MAAM,IAAIjB,KAAK,0CAAAkB,MAAA,CAA0CF,KAAK,OAAI;IACpE;EAAC;IAAApE,GAAA;IAAA2B,KAAA,EAED,SAAA4C,OAAchC,IAAI,EAAEoB,QAAQ,EAAE;MAC5B,IAAMnB,KAAK,GAAG,CAAC;MACf,IAAMgC,YAAY,GAAG,CAAC;MACtB,IAAMX,SAAS,GAAGC,mBAAG,CAACC,KAAK,CAACC,mBAAS,CAAC;MACtC,IAAInB,oBAAQ,CAAC4B,kBAAkB,CAAClC,IAAI,EAAEC,KAAK,EAAEgC,YAAY,EAAEX,SAAS,CAAC,EAAE;QACrE,OAAO,IAAI,CAACH,IAAI,CAACnB,IAAI,EAAEoB,QAAQ,CAAC;MAClC;MACA,IAAMS,KAAK,GAAGvB,oBAAQ,CAACwB,YAAY,EAAE;MACrC,MAAM,IAAIjB,KAAK,kCAAAkB,MAAA,CAAkCF,KAAK,OAAI;IAC5D;EAAC;EAAA,OAAA9B,GAAA;AAAA;AAAAZ,eAAA,CAjGGY,GAAG,UAEO;EACZa,SAAS,EAAS,UAAU;EAC5BuB,WAAW,EAAO,UAAU;EAC5BC,UAAU,EAAQ,UAAU;EAC5BC,WAAW,EAAO,UAAU;EAC5BC,aAAa,EAAK,UAAU;EAC5BC,gBAAgB,EAAE,UAAU;EAC5BC,YAAY,EAAM,UAAU;EAC5BC,gBAAgB,EAAE;AACpB,CAAC;AAAAtD,eAAA,CAXGY,GAAG,YAaS;EACd2C,QAAQ,EAAI,UAAU;EACtBC,UAAU,EAAE,UAAU;EACtBC,SAAS,EAAG,UAAU;EACtBC,UAAU,EAAE,UAAU;EACtBC,UAAU,EAAE,UAAU;EACtBC,UAAU,EAAE,UAAU;EACtBC,UAAU,EAAE;AACd,CAAC;AAAA,IAAAC,QAAA,GAgFYlD,GAAG;AAAAmD,OAAA,cAAAD,QAAA"}