{"version":3,"file":"group.js","names":["r","_interopRequireWildcard","require","_chunked","_interopRequireDefault","_chunk","_types","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MOGP","Chunk","nameOffset","uint32le","descriptionOffset","flags","minBoundingBox","Vec3Float","maxBoundingBox","portalOffset","uint16le","portalCount","batchCounts","Struct","a","b","c","int32le","fogOffsets","Array","uint8","unknown","Reserved","groupID","unknowns","batchOffsets","MOPY","triangles","materialID","int8","MOVI","MOVT","vertices","float32array3","MONR","normals","MOTV","textureCoords","float32array2","MOCV","colors","g","MOBA","batches","skips","int16le","firstIndex","indexCount","firstVertex","lastVertex","skip","MODR","doodadIndices","MOLR","lightRefList","MOBN","nodes","negChild","posChild","nFaces","faceStart","planeDist","floatle","MOBR","indices","_default","Chunked","Optional","interior","exports"],"sources":["../../src/lib/wmo/group.js"],"sourcesContent":["import * as r from 'restructure';\n\nimport Chunked from '../chunked';\nimport Chunk from '../chunked/chunk';\nimport { float32array2, float32array3, Vec3Float } from '../types';\n\nconst MOGP = Chunk({\n  nameOffset: r.uint32le,\n  descriptionOffset: r.uint32le,\n  flags: r.uint32le,\n  minBoundingBox: Vec3Float,\n  maxBoundingBox: Vec3Float,\n  portalOffset: r.uint16le,\n  portalCount: r.uint16le,\n  batchCounts: new r.Struct({\n    a: r.uint16le,\n    b: r.uint16le,\n    c: r.int32le\n  }),\n  fogOffsets: new r.Array(r.uint8, 4),\n  unknown: new r.Reserved(r.uint32le),\n  groupID: r.uint32le,\n  unknowns: new r.Reserved(r.uint32le, 2),\n\n  batchOffsets: function() {\n    return {\n      a: 0,\n      b: this.batchCounts.a,\n      c: this.batchCounts.a + this.batchCounts.b\n    };\n  }\n});\n\nconst MOPY = Chunk({\n  triangles: new r.Array(new r.Struct({\n    flags: r.uint8,\n    materialID: r.int8\n  }), 'size', 'bytes')\n});\n\nconst MOVI = Chunk({\n  triangles: new r.Array(r.uint16le, 'size', 'bytes')\n});\n\nconst MOVT = Chunk({\n  vertices: new r.Array(float32array3, 'size', 'bytes')\n});\n\nconst MONR = Chunk({\n  normals: new r.Array(float32array3, 'size', 'bytes')\n});\n\nconst MOTV = Chunk({\n  textureCoords: new r.Array(float32array2, 'size', 'bytes')\n});\n\nconst MOCV = Chunk({\n  colors: new r.Array(new r.Struct({\n    b: r.uint8,\n    g: r.uint8,\n    r: r.uint8,\n    a: r.uint8\n  }), 'size', 'bytes')\n});\n\nconst MOBA = Chunk({\n  batches: new r.Array(new r.Struct({\n    skips: new r.Reserved(r.int16le, 2 * 3),\n    firstIndex: r.uint32le,\n    indexCount: r.uint16le,\n    firstVertex: r.uint16le,\n    lastVertex: r.uint16le,\n    skip: new r.Reserved(r.uint8),\n    materialID: r.uint8\n  }), 'size', 'bytes')\n});\n\nconst MODR = Chunk({\n  doodadIndices: new r.Array(r.int16le, 'size', 'bytes')\n});\n\nconst MOLR = Chunk({\n  lightRefList: new r.Array(r.int16le, 'size', 'bytes')\n});\n\nconst MOBN = Chunk({\n  nodes: new r.Array(new r.Struct({\n    flags: r.uint16le,\n    negChild: r.int16le,\n    posChild: r.int16le,\n    nFaces: r.uint16le,\n    faceStart: r.uint32le,\n    planeDist: r.floatle\n  }), 'size', 'bytes')\n});\n\nconst MOBR = Chunk({\n  indices: new r.Array(r.int16le, 'size', 'bytes')\n});\n\n// const MLIQ = Chunk({\n//   xverts: r.uint32le,\n//   yverts: r.uint32le,\n//   xtiles: r.uint32le,\n//   ytiles: r.uint32le,\n//   x: Vec3Float,\n//   y: Vec3Float,\n//   materialId: r.uint32le\n// });\n\nexport default Chunked({\n  MOGP: MOGP,\n  MOPY: MOPY,\n  MOVI: MOVI,\n  MOVT: MOVT,\n  MONR: MONR,\n  MOTV: MOTV,\n  MOBA: MOBA,\n\n  flags: function() {\n    return this.MOGP.flags;\n  },\n\n  MOLR: new r.Optional(MOLR, function() {\n    return this.flags & 0x200;\n  }),\n  MODR: new r.Optional(MODR, function() {\n    return this.flags & 0x800;\n  }),\n  MOBN: new r.Optional(MOBN, function() {\n    return this.flags & 0x1;\n  }),\n  MOBR: new r.Optional(MOBR, function() {\n    return this.flags & 0x1;\n  }),\n  MOCV: new r.Optional(MOCV, function() {\n    return this.flags & 0x4;\n  }),\n  // MLIQ: new r.Optional(MLIQ, function() {\n  //   return this.flags & 0x4;\n  // }),\n  interior: function() {\n    return (this.flags & 0x2000) !== 0 && (this.flags & 0x8) === 0;\n  }\n});\n"],"mappings":"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"}